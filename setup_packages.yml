---
# From https://gist.github.com/ryane/e0ea8e4a75b140bf799f

# This playbook now relies on a 'deploy' sudo-able account to make further configuration changes
# (Run server_first_time.yml to get in this state.)
# This script installs additional basic security stuff:
#   - firewall
#   - fail2ban
#   - unattended updates
#   - logwatch
# and some useful packages
#   - mosh
#   - vim
#
# This should also be run once, with this command:
# ansible-playbook -i "hostname," setup_packages.yml --ask-become-pass -u deploy

- name: Initial provisioning of server for important packages
  hosts: all
  become: yes
  gather_facts: false

  vars:
    UBUNTU_COMMON_LOGWATCH_EMAIL: "richb.hanover@gmail.com"
    ubuntu_common_ssh_port: "22"
    ubuntu_common_mosh_from_port: "60000"
    ubuntu_common_mosh_to_port: "60010"

  tasks:
 
    - name: Update APT package cache
      apt: update_cache=yes cache_valid_time=3600

    - name: Upgrade APT to the latest packages
      apt: upgrade=safe

    - name: Install required packages
      apt: 
        update_cache: yes
        name: "{{ item }}"
      with_items: 
        - ufw
        - fail2ban
        - unattended-upgrades
        - logwatch

    - name: Install optional packages
      apt: 
        update_cache: yes
        name: "{{ item }}"
      with_items: 
        - mosh
        - vim

# Defaults already look good  
#    - name: Adjust APT update intervals
#      copy: src=apt_periodic dest=/etc/apt/apt.conf.d/10periodic

    - name: Setup ufw
      ufw: 
        state: enabled 
        policy: deny

    - name: Allow ssh traffic
      ufw: 
        rule: allow 
        port: "{{ ubuntu_common_ssh_port }}"
        proto: tcp

    - name: Allow mosh traffic
      ufw: 
        rule: allow 
        proto: udp 
        port: "{{ ubuntu_common_mosh_from_port }}:{{ ubuntu_common_mosh_to_port }}"
    
    - name: Set up Postfix to relay mail
      debconf: name=postfix
               question='{{ item.question }}'
               value='{{ item.value }}'
               vtype='{{ item.vtype }}'
      with_items:
        - { question: 'postfix/mailname', value: '{{ inventory_hostname }}', vtype: 'string' }
        - { question: 'postfix/main_mailer_type', value: 'Internet Site', vtype: 'string' }

    - name: Email log summary daily
      lineinfile: dest=/etc/cron.daily/00logwatch
                  regexp="^/usr/sbin/logwatch"
                  line="/usr/sbin/logwatch --output mail --mailto {{ UBUNTU_COMMON_LOGWATCH_EMAIL }} --detail high"
                  state=present create=yes