---

# Use this playbook to set up accounts on a new server. 
# it assumes the server has one user account with root privileges

# The script prompts (twice) for the password for the 'deploy' account

# Tasks
#  1. Log into the target server using the root SSH password (not public key)
#  2. Create a 'deploy' user, set up a SSH public key, make sudo'able
#  3. Disallow password login for all accounts
#  4. Disallow root ssh access
#  5. (Leave ssh port set to default of 22)

# Provenance: Original ideas came from:
# https://github.com/jedelman8/server-build-ansible/blob/master/server_one_time_run.yml
# referred from http://jedelman.com/home/server-bootstrap-prep-with-ansible/
# Seasoned with info from Ryan Eschinger's first-time setup

##############################################################
# this playbook needs to be run with -k to ask for the SSH password (no public key)
#
# ansible-playbook -i "hostname," setup_accounts.yml -k  
#
# If this fails with "Please add this host's fingerprint to your known_hosts file"
#   you need to ssh root@hostname one time to set the fingerprint. 
#   Then re-run the playbook
##############################################################

# 


- name: Set Up Accounts (only run this once)
  hosts: all
  gather_facts: no
  remote_user: root

  vars_prompt:
    - name: deploy_password
      prompt: "What is the password for the 'deploy' user?"
      private: yes
    - name: deploy_password2
      prompt: "  Enter the 'deploy' password one more time"
      private: yes

  vars:
      ubuntu_common_deploy_user_name: deploy
      ubuntu_common_deploy_public_keys:
        - ~/.ssh/id_rsa.pub
#      ubuntu_common_ssh_port: 22
      hashed_password:  "{{ deploy_password | password_hash('sha512', 'secretsalt') }}"

  tasks:

   #check if params are valid: abort the remaining tasks if not
  - assert: 
      that: 
        - deploy_password is defined
        - deploy_password2 is defined
        - deploy_password == deploy_password2
      success_msg: "Passwords are OK"
      fail_msg: "Passwords are missing or do not match"

  - name: 'Add deploy user'
    user: name={{ ubuntu_common_deploy_user_name }} password="{{ hashed_password }}" shell=/bin/bash

  - name: 'Add authorized key taken from richb public key'
    authorized_key:
      user: deploy
      state: present
      key: "{{ lookup('file', '/Users/richb/.ssh/id_rsa.pub') }}"

  - name: 'Add deploy user to sudoers'
    lineinfile: dest=/etc/sudoers
                  regexp="{{ ubuntu_common_deploy_user_name }} ALL"
                  line="{{ ubuntu_common_deploy_user_name }} ALL=(ALL) ALL"
                  state=present

  - name: 'Disallow password authentication'
    lineinfile: dest=/etc/ssh/sshd_config
                  regexp="^PasswordAuthentication"
                  line="PasswordAuthentication no"
                  state=present
    notify: Restart ssh

  - name: 'Disallow root SSH access'
    lineinfile: dest=/etc/ssh/sshd_config
                  regexp="^PermitRootLogin"
                  line="PermitRootLogin no"
                  state=present
    notify: Restart ssh

  # - name: 'Change ssh port'
  #   lineinfile: dest=/etc/ssh/sshd_config
  #                 regexp="^Port\s"
  #                 line="Port {{ ubuntu_common_ssh_port }}"
  #                 state=present
  #   notify: Restart ssh

  handlers:
    - name: Restart ssh
      service: name=ssh state=restarted
